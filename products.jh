/** Product sold by the Online store */
entity Product {
    name String required
    description String
    quantityPerPackage Integer required
    price BigDecimal required min(0)
    image ImageBlob
    stock Integer required min(0)
}

entity ProductCategory {
    name String required
    description String
}

entity Customer {
    name String required
    email String required pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/)
    phone String required
    addressLine1 String required
    addressLine2 String
    city String required
}

entity Order {
    placedDate LocalDate required
    status OrderStatus required
    code String required
}

enum OrderStatus {
    DELIVERED, PREPARED, PENDING, CANCELLED
}

entity OrderItem {
    quantity Integer required min(0)
    totalPrice BigDecimal required min(0)
    status OrderItemStatus required
}

enum OrderItemStatus {
    AVAILABLE, OUT_OF_STOCK, BACK_ORDER
}

relationship OneToOne {
    Customer{user(login) required} to User,
    Order{invoice} to Invoice{order(id)}
}

relationship ManyToOne {
	Order{user(login) required} to User
}

relationship ManyToOne {
	OrderItem{product(name) required} to Product
}

relationship OneToMany {
   Customer{order} to Order{customer(id) required},
   Order{orderItem} to OrderItem{order(id) required} ,
   ProductCategory{product} to Product{productCategory(id)},
}

service Product, ProductCategory, Customer, Order, OrderItem with serviceClass
paginate Product, Customer, Order, OrderItem with pagination

/* Entities for Invoice microservice */
entity Invoice {
    code String required
    date Instant required
    details String
    status InvoiceStatus required
    paymentAmount BigDecimal required
}

enum InvoiceStatus {
    PAID, ISSUED, CANCELLED
}

service Invoice with serviceClass
paginate Invoice with pagination